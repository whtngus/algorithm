- 시간 초과 ㅠ

class Solution:
    def dailyTemperatures(self, T: List[int]) -> List[int]:
        temp_stacks = []
        result_list = [0]  * len(T)
        for i, temp_now in enumerate(T):
            for temp_stack in temp_stacks[::-1]:
                if temp_stack[1] >= temp_now:
                    break
                result_list[temp_stack[0]] = i - temp_stack[0]
                temp_stacks.pop()
            temp_stacks.append([i,temp_now])
        return result_list


-49.08 반복문 접근 방식을 인덱스로 변경 - 알고리즘 방식 자체 차이는 x
class Solution:
    def dailyTemperatures(self, T: List[int]) -> List[int]:
        stack = [(0,T[0])]
        result_list = [0]  * len(T)
        for i in range(1,len(T)):
            while stack:
                s = stack[-1]
                if s[1] >= T[i]:
                    break
                result_list[s[0]] = i - s[0]
                stack.pop()
            stack.append((i,T[i]))
        return result_list